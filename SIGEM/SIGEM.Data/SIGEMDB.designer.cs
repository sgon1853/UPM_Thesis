#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SIGEM.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="SIGEMDB")]
	public partial class SIGEMDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertSupplySpaceShip(SupplySpaceShip instance);
    partial void UpdateSupplySpaceShip(SupplySpaceShip instance);
    partial void DeleteSupplySpaceShip(SupplySpaceShip instance);
    partial void InsertSpaceShip(SpaceShip instance);
    partial void UpdateSpaceShip(SpaceShip instance);
    partial void DeleteSpaceShip(SpaceShip instance);
    partial void InsertPassenger(Passenger instance);
    partial void UpdatePassenger(Passenger instance);
    partial void DeletePassenger(Passenger instance);
    partial void InsertInspection(Inspection instance);
    partial void UpdateInspection(Inspection instance);
    partial void DeleteInspection(Inspection instance);
    partial void InsertSpaceShipOcupation(SpaceShipOcupation instance);
    partial void UpdateSpaceShipOcupation(SpaceShipOcupation instance);
    partial void DeleteSpaceShipOcupation(SpaceShipOcupation instance);
    partial void InsertInspectionDetail(InspectionDetail instance);
    partial void UpdateInspectionDetail(InspectionDetail instance);
    partial void DeleteInspectionDetail(InspectionDetail instance);
    #endregion
		
		public SIGEMDBDataContext() : 
				base(global::SIGEM.Data.Properties.Settings.Default.SIGEMDBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public SIGEMDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SIGEMDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SIGEMDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SIGEMDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<SupplySpaceShip> SupplySpaceShips
		{
			get
			{
				return this.GetTable<SupplySpaceShip>();
			}
		}
		
		public System.Data.Linq.Table<SpaceShip> SpaceShips
		{
			get
			{
				return this.GetTable<SpaceShip>();
			}
		}
		
		public System.Data.Linq.Table<Passenger> Passengers
		{
			get
			{
				return this.GetTable<Passenger>();
			}
		}
		
		public System.Data.Linq.Table<Inspection> Inspections
		{
			get
			{
				return this.GetTable<Inspection>();
			}
		}
		
		public System.Data.Linq.Table<SpaceShipOcupation> SpaceShipOcupations
		{
			get
			{
				return this.GetTable<SpaceShipOcupation>();
			}
		}
		
		public System.Data.Linq.Table<InspectionDetail> InspectionDetails
		{
			get
			{
				return this.GetTable<InspectionDetail>();
			}
		}
	}
	
	[Table(Name="dbo.SupplySpaceShip")]
	public partial class SupplySpaceShip : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public SupplySpaceShip()
		{
			OnCreated();
		}
		
		[Column(Storage="_Id", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.SpaceShip")]
	public partial class SpaceShip : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _Name;
		
		private int _MaximumPassengers;
		
		private string _SupplySpaceShipOrigin;
		
		private string _SupplySpaceShipDestination;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnMaximumPassengersChanging(int value);
    partial void OnMaximumPassengersChanged();
    partial void OnSupplySpaceShipOriginChanging(string value);
    partial void OnSupplySpaceShipOriginChanged();
    partial void OnSupplySpaceShipDestinationChanging(string value);
    partial void OnSupplySpaceShipDestinationChanged();
    #endregion
		
		public SpaceShip()
		{
			OnCreated();
		}
		
		[Column(Storage="_Id", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Column(Storage="_MaximumPassengers", DbType="Int NOT NULL")]
		public int MaximumPassengers
		{
			get
			{
				return this._MaximumPassengers;
			}
			set
			{
				if ((this._MaximumPassengers != value))
				{
					this.OnMaximumPassengersChanging(value);
					this.SendPropertyChanging();
					this._MaximumPassengers = value;
					this.SendPropertyChanged("MaximumPassengers");
					this.OnMaximumPassengersChanged();
				}
			}
		}
		
		[Column(Storage="_SupplySpaceShipOrigin", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string SupplySpaceShipOrigin
		{
			get
			{
				return this._SupplySpaceShipOrigin;
			}
			set
			{
				if ((this._SupplySpaceShipOrigin != value))
				{
					this.OnSupplySpaceShipOriginChanging(value);
					this.SendPropertyChanging();
					this._SupplySpaceShipOrigin = value;
					this.SendPropertyChanged("SupplySpaceShipOrigin");
					this.OnSupplySpaceShipOriginChanged();
				}
			}
		}
		
		[Column(Storage="_SupplySpaceShipDestination", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string SupplySpaceShipDestination
		{
			get
			{
				return this._SupplySpaceShipDestination;
			}
			set
			{
				if ((this._SupplySpaceShipDestination != value))
				{
					this.OnSupplySpaceShipDestinationChanging(value);
					this.SendPropertyChanging();
					this._SupplySpaceShipDestination = value;
					this.SendPropertyChanged("SupplySpaceShipDestination");
					this.OnSupplySpaceShipDestinationChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Passenger")]
	public partial class Passenger : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _Name;
		
		private EntitySet<SpaceShipOcupation> _SpaceShipOcupations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Passenger()
		{
			this._SpaceShipOcupations = new EntitySet<SpaceShipOcupation>(new Action<SpaceShipOcupation>(this.attach_SpaceShipOcupations), new Action<SpaceShipOcupation>(this.detach_SpaceShipOcupations));
			OnCreated();
		}
		
		[Column(Storage="_Id", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Association(Name="Passenger_SpaceShipOcupation", Storage="_SpaceShipOcupations", OtherKey="Id_Passenger")]
		public EntitySet<SpaceShipOcupation> SpaceShipOcupations
		{
			get
			{
				return this._SpaceShipOcupations;
			}
			set
			{
				this._SpaceShipOcupations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SpaceShipOcupations(SpaceShipOcupation entity)
		{
			this.SendPropertyChanging();
			entity.Passenger = this;
		}
		
		private void detach_SpaceShipOcupations(SpaceShipOcupation entity)
		{
			this.SendPropertyChanging();
			entity.Passenger = null;
		}
	}
	
	[Table(Name="dbo.Inspection")]
	public partial class Inspection : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IdInspection;
		
		private string _InspectorName;
		
		private string _IdSpaceShip;
		
		private System.DateTime _InspectionDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdInspectionChanging(string value);
    partial void OnIdInspectionChanged();
    partial void OnInspectorNameChanging(string value);
    partial void OnInspectorNameChanged();
    partial void OnIdSpaceShipChanging(string value);
    partial void OnIdSpaceShipChanged();
    partial void OnInspectionDateChanging(System.DateTime value);
    partial void OnInspectionDateChanged();
    #endregion
		
		public Inspection()
		{
			OnCreated();
		}
		
		[Column(Storage="_IdInspection", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IdInspection
		{
			get
			{
				return this._IdInspection;
			}
			set
			{
				if ((this._IdInspection != value))
				{
					this.OnIdInspectionChanging(value);
					this.SendPropertyChanging();
					this._IdInspection = value;
					this.SendPropertyChanged("IdInspection");
					this.OnIdInspectionChanged();
				}
			}
		}
		
		[Column(Storage="_InspectorName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string InspectorName
		{
			get
			{
				return this._InspectorName;
			}
			set
			{
				if ((this._InspectorName != value))
				{
					this.OnInspectorNameChanging(value);
					this.SendPropertyChanging();
					this._InspectorName = value;
					this.SendPropertyChanged("InspectorName");
					this.OnInspectorNameChanged();
				}
			}
		}
		
		[Column(Storage="_IdSpaceShip", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string IdSpaceShip
		{
			get
			{
				return this._IdSpaceShip;
			}
			set
			{
				if ((this._IdSpaceShip != value))
				{
					this.OnIdSpaceShipChanging(value);
					this.SendPropertyChanging();
					this._IdSpaceShip = value;
					this.SendPropertyChanged("IdSpaceShip");
					this.OnIdSpaceShipChanged();
				}
			}
		}
		
		[Column(Storage="_InspectionDate", DbType="DateTime NOT NULL")]
		public System.DateTime InspectionDate
		{
			get
			{
				return this._InspectionDate;
			}
			set
			{
				if ((this._InspectionDate != value))
				{
					this.OnInspectionDateChanging(value);
					this.SendPropertyChanging();
					this._InspectionDate = value;
					this.SendPropertyChanged("InspectionDate");
					this.OnInspectionDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.SpaceShipOcupation")]
	public partial class SpaceShipOcupation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id_Passenger;
		
		private string _Id_SpaceShip;
		
		private string _SpaceShipName;
		
		private string _PassengerName;
		
		private EntityRef<Passenger> _Passenger;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_PassengerChanging(string value);
    partial void OnId_PassengerChanged();
    partial void OnId_SpaceShipChanging(string value);
    partial void OnId_SpaceShipChanged();
    partial void OnSpaceShipNameChanging(string value);
    partial void OnSpaceShipNameChanged();
    partial void OnPassengerNameChanging(string value);
    partial void OnPassengerNameChanged();
    #endregion
		
		public SpaceShipOcupation()
		{
			this._Passenger = default(EntityRef<Passenger>);
			OnCreated();
		}
		
		[Column(Storage="_Id_Passenger", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id_Passenger
		{
			get
			{
				return this._Id_Passenger;
			}
			set
			{
				if ((this._Id_Passenger != value))
				{
					if (this._Passenger.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_PassengerChanging(value);
					this.SendPropertyChanging();
					this._Id_Passenger = value;
					this.SendPropertyChanged("Id_Passenger");
					this.OnId_PassengerChanged();
				}
			}
		}
		
		[Column(Storage="_Id_SpaceShip", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id_SpaceShip
		{
			get
			{
				return this._Id_SpaceShip;
			}
			set
			{
				if ((this._Id_SpaceShip != value))
				{
					this.OnId_SpaceShipChanging(value);
					this.SendPropertyChanging();
					this._Id_SpaceShip = value;
					this.SendPropertyChanged("Id_SpaceShip");
					this.OnId_SpaceShipChanged();
				}
			}
		}
		
		[Column(Storage="_SpaceShipName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string SpaceShipName
		{
			get
			{
				return this._SpaceShipName;
			}
			set
			{
				if ((this._SpaceShipName != value))
				{
					this.OnSpaceShipNameChanging(value);
					this.SendPropertyChanging();
					this._SpaceShipName = value;
					this.SendPropertyChanged("SpaceShipName");
					this.OnSpaceShipNameChanged();
				}
			}
		}
		
		[Column(Storage="_PassengerName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string PassengerName
		{
			get
			{
				return this._PassengerName;
			}
			set
			{
				if ((this._PassengerName != value))
				{
					this.OnPassengerNameChanging(value);
					this.SendPropertyChanging();
					this._PassengerName = value;
					this.SendPropertyChanged("PassengerName");
					this.OnPassengerNameChanged();
				}
			}
		}
		
		[Association(Name="Passenger_SpaceShipOcupation", Storage="_Passenger", ThisKey="Id_Passenger", IsForeignKey=true)]
		public Passenger Passenger
		{
			get
			{
				return this._Passenger.Entity;
			}
			set
			{
				Passenger previousValue = this._Passenger.Entity;
				if (((previousValue != value) 
							|| (this._Passenger.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Passenger.Entity = null;
						previousValue.SpaceShipOcupations.Remove(this);
					}
					this._Passenger.Entity = value;
					if ((value != null))
					{
						value.SpaceShipOcupations.Add(this);
						this._Id_Passenger = value.Id;
					}
					else
					{
						this._Id_Passenger = default(string);
					}
					this.SendPropertyChanged("Passenger");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.InspectionDetail")]
	public partial class InspectionDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IdInspection;
		
		private string _IdPassenger;
		
		private string _PassengerName;
		
		private bool _isPassengerPresent;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdInspectionChanging(string value);
    partial void OnIdInspectionChanged();
    partial void OnIdPassengerChanging(string value);
    partial void OnIdPassengerChanged();
    partial void OnPassengerNameChanging(string value);
    partial void OnPassengerNameChanged();
    partial void OnisPassengerPresentChanging(bool value);
    partial void OnisPassengerPresentChanged();
    #endregion
		
		public InspectionDetail()
		{
			OnCreated();
		}
		
		[Column(Storage="_IdInspection", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IdInspection
		{
			get
			{
				return this._IdInspection;
			}
			set
			{
				if ((this._IdInspection != value))
				{
					this.OnIdInspectionChanging(value);
					this.SendPropertyChanging();
					this._IdInspection = value;
					this.SendPropertyChanged("IdInspection");
					this.OnIdInspectionChanged();
				}
			}
		}
		
		[Column(Storage="_IdPassenger", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IdPassenger
		{
			get
			{
				return this._IdPassenger;
			}
			set
			{
				if ((this._IdPassenger != value))
				{
					this.OnIdPassengerChanging(value);
					this.SendPropertyChanging();
					this._IdPassenger = value;
					this.SendPropertyChanged("IdPassenger");
					this.OnIdPassengerChanged();
				}
			}
		}
		
		[Column(Storage="_PassengerName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string PassengerName
		{
			get
			{
				return this._PassengerName;
			}
			set
			{
				if ((this._PassengerName != value))
				{
					this.OnPassengerNameChanging(value);
					this.SendPropertyChanging();
					this._PassengerName = value;
					this.SendPropertyChanged("PassengerName");
					this.OnPassengerNameChanged();
				}
			}
		}
		
		[Column(Storage="_isPassengerPresent", DbType="Bit NOT NULL")]
		public bool isPassengerPresent
		{
			get
			{
				return this._isPassengerPresent;
			}
			set
			{
				if ((this._isPassengerPresent != value))
				{
					this.OnisPassengerPresentChanging(value);
					this.SendPropertyChanging();
					this._isPassengerPresent = value;
					this.SendPropertyChanged("isPassengerPresent");
					this.OnisPassengerPresentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
